generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model Project {
  id          String   @id @default(uuid())
  description String?
  dbml_id     String?
  dbml_diagram_id    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  schema      Json?
  prompts     Prompt[]
  backendPrompts BackendPrompt[]
  frontendPrompts FrontendPrompt[]
}

enum PromptType {
  USER
  AGENT
}


model Prompt {
  id        String   @id @default(uuid())
  content String
  projectId String
  promptType PromptType @default(USER)
  action String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id])
  
}

model BackendPrompt {
  id        String   @id @default(uuid())
  content String
  projectId String
  promptType PromptType @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id])
}

model FrontendPrompt {
  id        String   @id @default(uuid())
  content String
  projectId String
  promptType PromptType @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id])
}